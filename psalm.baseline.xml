<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.8.0@9cf4f60a333f779ad3bc704a555920e81d4fdcda">
  <file src="src/Bridge/Github/GithubProfile.php">
    <LessSpecificReturnType>
      <code><![CDATA[array<string, array{access: RepositoryAttributeAccess}>]]></code>
    </LessSpecificReturnType>
    <MixedAssignment>
      <code><![CDATA[$attributes[$change->getResource()->getName()]]]></code>
    </MixedAssignment>
    <NoInterfaceProperties>
      <code><![CDATA[$change->expected]]></code>
    </NoInterfaceProperties>
    <PropertyNotSetInConstructor>
      <code>GithubProfile</code>
    </PropertyNotSetInConstructor>
    <RedundantPropertyInitializationCheck>
      <code><![CDATA[isset($this->repositories)]]></code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="src/Bridge/Gitlab/GitlabProfile.php">
    <LessSpecificReturnType>
      <code><![CDATA[array<string, array{access: RepositoryAttributeAccess}>]]></code>
    </LessSpecificReturnType>
    <MixedAssignment>
      <code><![CDATA[$attributes[$change->getResource()->getName()]]]></code>
    </MixedAssignment>
    <NoInterfaceProperties>
      <code><![CDATA[$change->expected]]></code>
    </NoInterfaceProperties>
    <PropertyNotSetInConstructor>
      <code>GitlabProfile</code>
    </PropertyNotSetInConstructor>
    <RedundantPropertyInitializationCheck>
      <code><![CDATA[isset($this->repositories)]]></code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="src/Bridge/ProfileTrait.php">
    <LessSpecificImplementedReturnType>
      <code>NamedResourceChangeCollection</code>
    </LessSpecificImplementedReturnType>
    <LessSpecificReturnType>
      <code><![CDATA[array<string>]]></code>
    </LessSpecificReturnType>
  </file>
  <file src="src/Bridge/Symfony/Command/ApplyCommand.php">
    <UnusedClass>
      <code>ApplyCommand</code>
    </UnusedClass>
  </file>
  <file src="src/Bridge/Symfony/Command/CommandTrait.php">
    <InvalidArgument>
      <code>$plan</code>
    </InvalidArgument>
    <LessSpecificReturnType>
      <code>array</code>
      <code>array</code>
      <code><![CDATA[array<string>]]></code>
    </LessSpecificReturnType>
  </file>
  <file src="src/Bridge/Symfony/Command/DiffCommand.php">
    <UnusedClass>
      <code>DiffCommand</code>
    </UnusedClass>
  </file>
  <file src="src/Bridge/Symfony/Command/SummaryCommand.php">
    <UnusedClass>
      <code>SummaryCommand</code>
    </UnusedClass>
  </file>
  <file src="src/Bridge/Symfony/Config/ValidatingYamlConfigReader.php">
    <MixedMethodCall>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayPrototype</code>
      <code>arrayPrototype</code>
      <code>beforeNormalization</code>
      <code>beforeNormalization</code>
      <code>cannotBeEmpty</code>
      <code>cannotBeEmpty</code>
      <code>cannotBeEmpty</code>
      <code>castToArray</code>
      <code>castToArray</code>
      <code>children</code>
      <code>children</code>
      <code>children</code>
      <code>children</code>
      <code>children</code>
      <code>children</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>enumNode</code>
      <code>enumNode</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>isRequired</code>
      <code>requiresAtLeastOneElement</code>
      <code>requiresAtLeastOneElement</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarPrototype</code>
      <code>scalarPrototype</code>
      <code>scalarPrototype</code>
      <code>scalarPrototype</code>
      <code>useAttributeAsKey</code>
      <code>useAttributeAsKey</code>
      <code>values</code>
      <code>values</code>
    </MixedMethodCall>
    <PossiblyNullReference>
      <code>arrayNode</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod>
      <code>arrayNode</code>
    </PossiblyUndefinedMethod>
    <UnusedClass>
      <code>ValidatingYamlConfigReader</code>
    </UnusedClass>
  </file>
  <file src="src/Bridge/Symfony/Console/Application.php">
    <UnusedClass>
      <code>Application</code>
    </UnusedClass>
  </file>
  <file src="src/Bridge/Symfony/Console/Style/AriadneStyle.php">
    <LessSpecificReturnType>
      <code><![CDATA[array<string>]]></code>
      <code>string</code>
    </LessSpecificReturnType>
  </file>
  <file src="src/Bridge/Symfony/DependencyInjection/RuntimeEnvProcessor.php">
    <UnusedClass>
      <code>RuntimeEnvProcessor</code>
    </UnusedClass>
  </file>
  <file src="src/Model/Change/NamedResourceChangeTrait.php">
    <ArgumentTypeCoercion>
      <code>$changes</code>
      <code>$changes</code>
      <code>$changes</code>
      <code>$changes</code>
    </ArgumentTypeCoercion>
    <InvalidReturnType>
      <code><![CDATA[self<STResource, STChange>]]></code>
      <code><![CDATA[self<STResource, STChange>]]></code>
      <code><![CDATA[self<STResource, STChange>]]></code>
      <code><![CDATA[self<STResource, STChange>]]></code>
    </InvalidReturnType>
    <PossiblyUnusedMethod>
      <code>count</code>
      <code>count</code>
      <code>count</code>
      <code>count</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Model/Collection/NamedResourceCollectionTrait.php">
    <ImplementedReturnTypeMismatch>
      <code>NamedResource</code>
      <code>NamedResource</code>
      <code>\Sigwin\Ariadne\NamedResourceCollection</code>
      <code>\Sigwin\Ariadne\NamedResourceCollection</code>
      <code>\Sigwin\Ariadne\NamedResourceCollection</code>
      <code>\Sigwin\Ariadne\NamedResourceCollection</code>
      <code>\Sigwin\Ariadne\NamedResourceCollection</code>
      <code>\Sigwin\Ariadne\NamedResourceCollection</code>
    </ImplementedReturnTypeMismatch>
    <LessSpecificImplementedReturnType>
      <code>\Traversable</code>
      <code>\Traversable</code>
    </LessSpecificImplementedReturnType>
    <PossiblyUnusedMethod>
      <code>count</code>
      <code>count</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Model/ProfileTemplate.php">
    <PossiblyUnusedMethod>
      <code>count</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Model/ProfileTemplateTarget.php">
    <UnusedParam>
      <code>$param</code>
      <code>$repository</code>
    </UnusedParam>
  </file>
  <file src="src/Model/Repository.php">
    <LessSpecificReturnType>
      <code>?array</code>
    </LessSpecificReturnType>
  </file>
  <file src="src/Profile/Collection/FilteredProfileGeneratorCollection.php">
    <PossiblyUnusedMethod>
      <code>count</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/Profile/Factory/ClassmapProfileFactory.php">
    <PossiblyUnusedReturnValue>
      <code>Profile</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="tests/Bridge/ProfileTestCase.php">
    <InvalidArgument>
      <code>testCanPlanUserChanges</code>
    </InvalidArgument>
    <MixedAssignment>
      <code><![CDATA[$actual[$change->getResource()->getName()]]]></code>
    </MixedAssignment>
    <NoInterfaceProperties>
      <code><![CDATA[$change->expected]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="tests/Bridge/Symfony/Console/Style/AriadneStyleTest.php">
    <LessSpecificReturnType>
      <code>Profile</code>
    </LessSpecificReturnType>
  </file>
  <file src="tests/ModelGeneratorTrait.php">
    <ArgumentTypeCoercion>
      <code>$repositories</code>
      <code>SortedNamedResourceCollection::fromArray($repositories)</code>
    </ArgumentTypeCoercion>
    <MixedArrayOffset>
      <code>$configs[$idx++]</code>
      <code>$configs[$idx]</code>
      <code>$items[$idx++]</code>
      <code>$repositories[$idx]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$idx</code>
      <code>$idx</code>
      <code>$idx</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$idx</code>
      <code>$idx</code>
      <code>$idx</code>
    </MixedOperand>
    <PossiblyUnusedMethod>
      <code>createTemplates</code>
      <code>createTemplates</code>
      <code>createTemplates</code>
      <code>createTemplates</code>
      <code>createTemplates</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Profile/Collection/FilteredProfileGeneratorCollectionTest.php">
    <ArgumentTypeCoercion>
      <code>iterator_to_array($config) + iterator_to_array($config)</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="tests/Profile/Factory/ClassmapProfileFactoryTest.php">
    <PossiblyUnusedMethod>
      <code>getRepositories</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Profile/Template/Factory/FilteredProfileTemplateFactoryTest.php">
    <ArgumentTypeCoercion>
      <code>$actual</code>
    </ArgumentTypeCoercion>
  </file>
</files>
